### Step 5: **Adding Content-Type for Different File Types**

So far, the server serves HTML files. However, websites often include stylesheets, scripts, images, etc. To handle these file types, the server needs to send the correct `Content-Type` headers.

---

### **Goal**
We will:
1. Serve static files such as `.css`, `.js`, or images.
2. Dynamically set the correct `Content-Type` for different file types.

---

### **Updated Code**
Hereâ€™s how you can implement this functionality:

```javascript
// Import required modules
const http = require('http');
const fs = require('fs');
const path = require('path');

// Define the server port
const PORT = 3000;

// Create the server
const server = http.createServer((req, res) => {
    // Determine the requested file path
    let filePath = path.join(__dirname, req.url === '/' ? 'index.html' : req.url);

    // Get the file extension to determine content type
    const extname = path.extname(filePath);

    // Map file extensions to content types
    const contentTypeMap = {
        '.html': 'text/html',
        '.css': 'text/css',
        '.js': 'application/javascript',
        '.png': 'image/png',
        '.jpg': 'image/jpeg',
        '.gif': 'image/gif',
        '.svg': 'image/svg+xml',
        '.json': 'application/json',
        '.txt': 'text/plain',
    };

    // Default to 'text/html' if file type is unknown
    const contentType = contentTypeMap[extname] || 'application/octet-stream';

    // Read and serve the file
    fs.readFile(filePath, (err, content) => {
        if (err) {
            if (err.code === 'ENOENT') {
                // File not found, serve 404 page
                res.writeHead(404, { 'Content-Type': 'text/html' });
                res.end('<h1>404 - File Not Found</h1>');
            } else {
                // Server error
                res.writeHead(500, { 'Content-Type': 'text/html' });
                res.end('<h1>500 - Internal Server Error</h1>');
            }
            return;
        }

        // Serve the file with the correct content type
        res.writeHead(200, { 'Content-Type': contentType });
        res.end(content);
    });
});

// Start the server
server.listen(PORT, () => {
    console.log(`Server running at http://localhost:${PORT}`);
});
```

---

### **Changes Made**

1. **Extract File Extension**:
   ```javascript
   const extname = path.extname(filePath);
   ```
   - This retrieves the file extension (e.g., `.html`, `.css`, etc.) of the requested file.

2. **Content-Type Mapping**:
   ```javascript
   const contentTypeMap = {
       '.html': 'text/html',
       '.css': 'text/css',
       '.js': 'application/javascript',
       '.png': 'image/png',
       '.jpg': 'image/jpeg',
       '.gif': 'image/gif',
       '.svg': 'image/svg+xml',
       '.json': 'application/json',
       '.txt': 'text/plain',
   };
   const contentType = contentTypeMap[extname] || 'application/octet-stream';
   ```
   - This ensures that each file type is served with the correct `Content-Type` header.
   - Files without a known type default to `application/octet-stream`.

3. **Enhanced Error Handling**:
   - **`ENOENT`**: This error occurs if the file doesnâ€™t exist (404 response).
   - Other errors are treated as server errors (500 response).

---

### **New Features**
- The server can now handle various file types (`.css`, `.js`, `.png`, etc.).
- Proper `Content-Type` headers ensure compatibility with browsers.

---

### **How to Test**
1. Create additional files in the directory:
   - A stylesheet (`style.css`):
     ```css
     body {
         font-family: Arial, sans-serif;
         background-color: #f4f4f4;
         color: #333;
     }
     ```
   - A script (`script.js`):
     ```javascript
     console.log('JavaScript is working!');
     ```

2. Include these in your `index.html`:
   ```html
   <link rel="stylesheet" href="style.css">
   <script src="script.js"></script>
   ```

3. Restart the server and visit:
   - `http://localhost:3000/` â†’ Should load the HTML page with styles and scripts.
   - `http://localhost:3000/style.css` â†’ Should load the CSS file.
   - `http://localhost:3000/script.js` â†’ Should load the JavaScript file.

---

Let me know when youâ€™re ready to proceed! ðŸ˜Š